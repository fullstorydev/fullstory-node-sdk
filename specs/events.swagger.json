{
  "swagger": "2.0",
  "info": {
    "title": "Introduction",
    "description": "The Events API provides access to create custom events.",
    "version": "v2"
  },
  "tags": [
    {
      "name": "Events"
    }
  ],
  "host": "api.fullstory.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v2/events": {
      "post": {
        "summary": "Create Events",
        "description": "Creates one event with the specified details. This request can be [made idempotent](../../idempotent-requests).",
        "operationId": "CreateEvents",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/fullstory.v2.events.CreateEventsResponse"
            }
          },
          "400": {
            "description": "Returned when invalid input has been provided. Fix the issue and retry.",
            "schema": {
              "$ref": "#/definitions/fullstory.v2.apierror.ErrorResponse",
              "example": {
                "message": "uid is required",
                "code": "required_field"
              }
            }
          },
          "401": {
            "description": "Returned when access to the resource is unauthorized.",
            "schema": {
              "$ref": "#/definitions/fullstory.v2.apierror.ErrorResponse",
              "example": {
                "message": "access is unauthorized",
                "code": "unauthorized"
              }
            }
          },
          "403": {
            "description": "Returned when access is not allowed due to insufficient permissions.",
            "schema": {
              "$ref": "#/definitions/fullstory.v2.apierror.ErrorResponse",
              "example": {
                "message": "insufficient permissions",
                "code": "forbidden"
              }
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "$ref": "#/definitions/fullstory.v2.apierror.ErrorResponse",
              "example": {
                "message": "Requested resource does not exist",
                "code": "resource_not_found"
              }
            }
          },
          "429": {
            "description": "Returned when the client has exceeded the rate limit for this endpoint. A `Retry-After` header will be included with the response. This header will contain the number of seconds that you should wait before attempting to send another request.",
            "schema": {
              "$ref": "#/definitions/fullstory.v2.apierror.ErrorResponse",
              "example": {
                "message": "Too many requests. Client has exceeded the rate limit for this endpoint.",
                "code": "too_many_requests"
              }
            }
          },
          "500": {
            "description": "Returned when a server error is encountered.",
            "schema": {
              "$ref": "#/definitions/fullstory.v2.apierror.ErrorResponse",
              "example": {
                "message": "Server error was encountered",
                "code": "server_error"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/fullstory.v2.events.CreateEventsRequest"
            }
          }
        ],
        "tags": [
          "Events"
        ],
        "x-fullstory-operation-ordering": 10
      }
    },
    "/v2/events/batch": {
      "post": {
        "summary": "Create Events Batch Import",
        "description": "Creates a batch events import job with the given list of event information.\n\nThe maximum number of request objects that can be included in a single batch request is `50,000`. This request can be [made idempotent](../../idempotent-requests).",
        "operationId": "CreateBatchEventsImportJob",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/fullstory.v2.events.CreateBatchEventsImportJobResponse"
            }
          },
          "400": {
            "description": "Returned when invalid input has been provided. Fix the issue and retry.",
            "schema": {
              "$ref": "#/definitions/fullstory.v2.apierror.ErrorResponse",
              "example": {
                "message": "uid is required",
                "code": "required_field"
              }
            }
          },
          "401": {
            "description": "Returned when access to the resource is unauthorized.",
            "schema": {
              "$ref": "#/definitions/fullstory.v2.apierror.ErrorResponse",
              "example": {
                "message": "access is unauthorized",
                "code": "unauthorized"
              }
            }
          },
          "403": {
            "description": "Returned when access is not allowed due to insufficient permissions.",
            "schema": {
              "$ref": "#/definitions/fullstory.v2.apierror.ErrorResponse",
              "example": {
                "message": "insufficient permissions",
                "code": "forbidden"
              }
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "$ref": "#/definitions/fullstory.v2.apierror.ErrorResponse",
              "example": {
                "message": "Requested resource does not exist",
                "code": "resource_not_found"
              }
            }
          },
          "429": {
            "description": "Returned when the client has exceeded the rate limit for this endpoint. A `Retry-After` header will be included with the response. This header will contain the number of seconds that you should wait before attempting to send another request.",
            "schema": {
              "$ref": "#/definitions/fullstory.v2.apierror.ErrorResponse",
              "example": {
                "message": "Too many requests. Client has exceeded the rate limit for this endpoint.",
                "code": "too_many_requests"
              }
            }
          },
          "500": {
            "description": "Returned when a server error is encountered.",
            "schema": {
              "$ref": "#/definitions/fullstory.v2.apierror.ErrorResponse",
              "example": {
                "message": "Server error was encountered",
                "code": "server_error"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "description": "The request payloads contains the list of events to be imported",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/fullstory.v2.events.CreateBatchEventsImportJobRequest"
            }
          }
        ],
        "tags": [
          "Events",
          "Batch Import"
        ],
        "x-fullstory-operation-ordering": 10
      }
    },
    "/v2/events/batch/{job_id}": {
      "get": {
        "summary": "Get Batch Import Job Details",
        "description": "Get the status for a batch events import job with job details.",
        "operationId": "GetBatchEventsImportStatus",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/fullstory.v2.job.JobStatusResponse"
            }
          },
          "400": {
            "description": "Returned when invalid input has been provided. Fix the issue and retry.",
            "schema": {
              "$ref": "#/definitions/fullstory.v2.apierror.ErrorResponse",
              "example": {
                "message": "uid is required",
                "code": "required_field"
              }
            }
          },
          "401": {
            "description": "Returned when access to the resource is unauthorized.",
            "schema": {
              "$ref": "#/definitions/fullstory.v2.apierror.ErrorResponse",
              "example": {
                "message": "access is unauthorized",
                "code": "unauthorized"
              }
            }
          },
          "403": {
            "description": "Returned when access is not allowed due to insufficient permissions.",
            "schema": {
              "$ref": "#/definitions/fullstory.v2.apierror.ErrorResponse",
              "example": {
                "message": "insufficient permissions",
                "code": "forbidden"
              }
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "$ref": "#/definitions/fullstory.v2.apierror.ErrorResponse",
              "example": {
                "message": "Requested resource does not exist",
                "code": "resource_not_found"
              }
            }
          },
          "429": {
            "description": "Returned when the client has exceeded the rate limit for this endpoint. A `Retry-After` header will be included with the response. This header will contain the number of seconds that you should wait before attempting to send another request.",
            "schema": {
              "$ref": "#/definitions/fullstory.v2.apierror.ErrorResponse",
              "example": {
                "message": "Too many requests. Client has exceeded the rate limit for this endpoint.",
                "code": "too_many_requests"
              }
            }
          },
          "500": {
            "description": "Returned when a server error is encountered.",
            "schema": {
              "$ref": "#/definitions/fullstory.v2.apierror.ErrorResponse",
              "example": {
                "message": "Server error was encountered",
                "code": "server_error"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "job_id",
            "description": "ID that can be used to check the status and retrieve results for the batch import",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Events",
          "Batch Import"
        ],
        "x-fullstory-operation-ordering": 20
      }
    },
    "/v2/events/batch/{job_id}/errors": {
      "get": {
        "summary": "Get Batch Import Errors",
        "description": "Get the error message and code for any events that failed from an events import job.",
        "operationId": "GetBatchEventsImportErrors",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/fullstory.v2.events.GetBatchEventsImportErrorsResponse"
            }
          },
          "202": {
            "description": "Returned when this API is called while the job is still processing.",
            "schema": { }
          },
          "400": {
            "description": "Returned when invalid input has been provided. Fix the issue and retry.",
            "schema": {
              "$ref": "#/definitions/fullstory.v2.apierror.ErrorResponse",
              "example": {
                "message": "uid is required",
                "code": "required_field"
              }
            }
          },
          "401": {
            "description": "Returned when access to the resource is unauthorized.",
            "schema": {
              "$ref": "#/definitions/fullstory.v2.apierror.ErrorResponse",
              "example": {
                "message": "access is unauthorized",
                "code": "unauthorized"
              }
            }
          },
          "403": {
            "description": "Returned when access is not allowed due to insufficient permissions.",
            "schema": {
              "$ref": "#/definitions/fullstory.v2.apierror.ErrorResponse",
              "example": {
                "message": "insufficient permissions",
                "code": "forbidden"
              }
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "$ref": "#/definitions/fullstory.v2.apierror.ErrorResponse",
              "example": {
                "message": "Requested resource does not exist",
                "code": "resource_not_found"
              }
            }
          },
          "429": {
            "description": "Returned when the client has exceeded the rate limit for this endpoint. A `Retry-After` header will be included with the response. This header will contain the number of seconds that you should wait before attempting to send another request.",
            "schema": {
              "$ref": "#/definitions/fullstory.v2.apierror.ErrorResponse",
              "example": {
                "message": "Too many requests. Client has exceeded the rate limit for this endpoint.",
                "code": "too_many_requests"
              }
            }
          },
          "500": {
            "description": "Returned when a server error is encountered.",
            "schema": {
              "$ref": "#/definitions/fullstory.v2.apierror.ErrorResponse",
              "example": {
                "message": "Server error was encountered",
                "code": "server_error"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "job_id",
            "description": "ID that can be used to check the status and retrieve results for the batch import",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "page_token",
            "description": "The token that can be used in a request to fetch the next page of results",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Events",
          "Batch Import"
        ],
        "x-fullstory-operation-ordering": 40
      }
    },
    "/v2/events/batch/{job_id}/imports": {
      "get": {
        "summary": "Get Batch Imported Events",
        "description": "Get the event details for successful events imported from a batch events import job.",
        "operationId": "GetBatchEventsImports",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/fullstory.v2.events.GetBatchEventsImportsResponse"
            }
          },
          "202": {
            "description": "Returned when this API is called while the job is still processing.",
            "schema": { }
          },
          "400": {
            "description": "Returned when invalid input has been provided. Fix the issue and retry.",
            "schema": {
              "$ref": "#/definitions/fullstory.v2.apierror.ErrorResponse",
              "example": {
                "message": "uid is required",
                "code": "required_field"
              }
            }
          },
          "401": {
            "description": "Returned when access to the resource is unauthorized.",
            "schema": {
              "$ref": "#/definitions/fullstory.v2.apierror.ErrorResponse",
              "example": {
                "message": "access is unauthorized",
                "code": "unauthorized"
              }
            }
          },
          "403": {
            "description": "Returned when access is not allowed due to insufficient permissions.",
            "schema": {
              "$ref": "#/definitions/fullstory.v2.apierror.ErrorResponse",
              "example": {
                "message": "insufficient permissions",
                "code": "forbidden"
              }
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "$ref": "#/definitions/fullstory.v2.apierror.ErrorResponse",
              "example": {
                "message": "Requested resource does not exist",
                "code": "resource_not_found"
              }
            }
          },
          "429": {
            "description": "Returned when the client has exceeded the rate limit for this endpoint. A `Retry-After` header will be included with the response. This header will contain the number of seconds that you should wait before attempting to send another request.",
            "schema": {
              "$ref": "#/definitions/fullstory.v2.apierror.ErrorResponse",
              "example": {
                "message": "Too many requests. Client has exceeded the rate limit for this endpoint.",
                "code": "too_many_requests"
              }
            }
          },
          "500": {
            "description": "Returned when a server error is encountered.",
            "schema": {
              "$ref": "#/definitions/fullstory.v2.apierror.ErrorResponse",
              "example": {
                "message": "Server error was encountered",
                "code": "server_error"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "job_id",
            "description": "ID that can be used to check the status and retrieve results for the batch import",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "page_token",
            "description": "The token that can be used in a request to fetch the next page of results",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "include_schema",
            "description": "Whether to include the schema in the response.",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "Events",
          "Batch Import"
        ],
        "x-fullstory-operation-ordering": 30
      }
    },
    "/v2beta/events": {
      "post": {
        "summary": "Create Events",
        "description": "Creates one event with the specified details. This request can be [made idempotent](../../idempotent-requests).",
        "operationId": "CreateEvents2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/fullstory.v2.events.CreateEventsResponse"
            }
          },
          "400": {
            "description": "Returned when invalid input has been provided. Fix the issue and retry.",
            "schema": {
              "$ref": "#/definitions/fullstory.v2.apierror.ErrorResponse",
              "example": {
                "message": "uid is required",
                "code": "required_field"
              }
            }
          },
          "401": {
            "description": "Returned when access to the resource is unauthorized.",
            "schema": {
              "$ref": "#/definitions/fullstory.v2.apierror.ErrorResponse",
              "example": {
                "message": "access is unauthorized",
                "code": "unauthorized"
              }
            }
          },
          "403": {
            "description": "Returned when access is not allowed due to insufficient permissions.",
            "schema": {
              "$ref": "#/definitions/fullstory.v2.apierror.ErrorResponse",
              "example": {
                "message": "insufficient permissions",
                "code": "forbidden"
              }
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "$ref": "#/definitions/fullstory.v2.apierror.ErrorResponse",
              "example": {
                "message": "Requested resource does not exist",
                "code": "resource_not_found"
              }
            }
          },
          "429": {
            "description": "Returned when the client has exceeded the rate limit for this endpoint. A `Retry-After` header will be included with the response. This header will contain the number of seconds that you should wait before attempting to send another request.",
            "schema": {
              "$ref": "#/definitions/fullstory.v2.apierror.ErrorResponse",
              "example": {
                "message": "Too many requests. Client has exceeded the rate limit for this endpoint.",
                "code": "too_many_requests"
              }
            }
          },
          "500": {
            "description": "Returned when a server error is encountered.",
            "schema": {
              "$ref": "#/definitions/fullstory.v2.apierror.ErrorResponse",
              "example": {
                "message": "Server error was encountered",
                "code": "server_error"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/fullstory.v2.events.CreateEventsRequest"
            }
          }
        ],
        "tags": [
          "Events"
        ],
        "x-fullstory-operation-ordering": 10
      }
    },
    "/v2beta/events/batch": {
      "post": {
        "summary": "Create Events Batch Import",
        "description": "Creates a batch events import job with the given list of event information.\n\nThe maximum number of request objects that can be included in a single batch request is `50,000`. This request can be [made idempotent](../../idempotent-requests).",
        "operationId": "CreateBatchEventsImportJob2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/fullstory.v2.events.CreateBatchEventsImportJobResponse"
            }
          },
          "400": {
            "description": "Returned when invalid input has been provided. Fix the issue and retry.",
            "schema": {
              "$ref": "#/definitions/fullstory.v2.apierror.ErrorResponse",
              "example": {
                "message": "uid is required",
                "code": "required_field"
              }
            }
          },
          "401": {
            "description": "Returned when access to the resource is unauthorized.",
            "schema": {
              "$ref": "#/definitions/fullstory.v2.apierror.ErrorResponse",
              "example": {
                "message": "access is unauthorized",
                "code": "unauthorized"
              }
            }
          },
          "403": {
            "description": "Returned when access is not allowed due to insufficient permissions.",
            "schema": {
              "$ref": "#/definitions/fullstory.v2.apierror.ErrorResponse",
              "example": {
                "message": "insufficient permissions",
                "code": "forbidden"
              }
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "$ref": "#/definitions/fullstory.v2.apierror.ErrorResponse",
              "example": {
                "message": "Requested resource does not exist",
                "code": "resource_not_found"
              }
            }
          },
          "429": {
            "description": "Returned when the client has exceeded the rate limit for this endpoint. A `Retry-After` header will be included with the response. This header will contain the number of seconds that you should wait before attempting to send another request.",
            "schema": {
              "$ref": "#/definitions/fullstory.v2.apierror.ErrorResponse",
              "example": {
                "message": "Too many requests. Client has exceeded the rate limit for this endpoint.",
                "code": "too_many_requests"
              }
            }
          },
          "500": {
            "description": "Returned when a server error is encountered.",
            "schema": {
              "$ref": "#/definitions/fullstory.v2.apierror.ErrorResponse",
              "example": {
                "message": "Server error was encountered",
                "code": "server_error"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "description": "The request payloads contains the list of events to be imported",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/fullstory.v2.events.CreateBatchEventsImportJobRequest"
            }
          }
        ],
        "tags": [
          "Events",
          "Batch Import"
        ],
        "x-fullstory-operation-ordering": 10
      }
    },
    "/v2beta/events/batch/{job_id}": {
      "get": {
        "summary": "Get Batch Import Job Details",
        "description": "Get the status for a batch events import job with job details.",
        "operationId": "GetBatchEventsImportStatus2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/fullstory.v2.job.JobStatusResponse"
            }
          },
          "400": {
            "description": "Returned when invalid input has been provided. Fix the issue and retry.",
            "schema": {
              "$ref": "#/definitions/fullstory.v2.apierror.ErrorResponse",
              "example": {
                "message": "uid is required",
                "code": "required_field"
              }
            }
          },
          "401": {
            "description": "Returned when access to the resource is unauthorized.",
            "schema": {
              "$ref": "#/definitions/fullstory.v2.apierror.ErrorResponse",
              "example": {
                "message": "access is unauthorized",
                "code": "unauthorized"
              }
            }
          },
          "403": {
            "description": "Returned when access is not allowed due to insufficient permissions.",
            "schema": {
              "$ref": "#/definitions/fullstory.v2.apierror.ErrorResponse",
              "example": {
                "message": "insufficient permissions",
                "code": "forbidden"
              }
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "$ref": "#/definitions/fullstory.v2.apierror.ErrorResponse",
              "example": {
                "message": "Requested resource does not exist",
                "code": "resource_not_found"
              }
            }
          },
          "429": {
            "description": "Returned when the client has exceeded the rate limit for this endpoint. A `Retry-After` header will be included with the response. This header will contain the number of seconds that you should wait before attempting to send another request.",
            "schema": {
              "$ref": "#/definitions/fullstory.v2.apierror.ErrorResponse",
              "example": {
                "message": "Too many requests. Client has exceeded the rate limit for this endpoint.",
                "code": "too_many_requests"
              }
            }
          },
          "500": {
            "description": "Returned when a server error is encountered.",
            "schema": {
              "$ref": "#/definitions/fullstory.v2.apierror.ErrorResponse",
              "example": {
                "message": "Server error was encountered",
                "code": "server_error"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "job_id",
            "description": "ID that can be used to check the status and retrieve results for the batch import",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Events",
          "Batch Import"
        ],
        "x-fullstory-operation-ordering": 20
      }
    },
    "/v2beta/events/batch/{job_id}/errors": {
      "get": {
        "summary": "Get Batch Import Errors",
        "description": "Get the error message and code for any events that failed from an events import job.",
        "operationId": "GetBatchEventsImportErrors2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/fullstory.v2.events.GetBatchEventsImportErrorsResponse"
            }
          },
          "202": {
            "description": "Returned when this API is called while the job is still processing.",
            "schema": { }
          },
          "400": {
            "description": "Returned when invalid input has been provided. Fix the issue and retry.",
            "schema": {
              "$ref": "#/definitions/fullstory.v2.apierror.ErrorResponse",
              "example": {
                "message": "uid is required",
                "code": "required_field"
              }
            }
          },
          "401": {
            "description": "Returned when access to the resource is unauthorized.",
            "schema": {
              "$ref": "#/definitions/fullstory.v2.apierror.ErrorResponse",
              "example": {
                "message": "access is unauthorized",
                "code": "unauthorized"
              }
            }
          },
          "403": {
            "description": "Returned when access is not allowed due to insufficient permissions.",
            "schema": {
              "$ref": "#/definitions/fullstory.v2.apierror.ErrorResponse",
              "example": {
                "message": "insufficient permissions",
                "code": "forbidden"
              }
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "$ref": "#/definitions/fullstory.v2.apierror.ErrorResponse",
              "example": {
                "message": "Requested resource does not exist",
                "code": "resource_not_found"
              }
            }
          },
          "429": {
            "description": "Returned when the client has exceeded the rate limit for this endpoint. A `Retry-After` header will be included with the response. This header will contain the number of seconds that you should wait before attempting to send another request.",
            "schema": {
              "$ref": "#/definitions/fullstory.v2.apierror.ErrorResponse",
              "example": {
                "message": "Too many requests. Client has exceeded the rate limit for this endpoint.",
                "code": "too_many_requests"
              }
            }
          },
          "500": {
            "description": "Returned when a server error is encountered.",
            "schema": {
              "$ref": "#/definitions/fullstory.v2.apierror.ErrorResponse",
              "example": {
                "message": "Server error was encountered",
                "code": "server_error"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "job_id",
            "description": "ID that can be used to check the status and retrieve results for the batch import",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "page_token",
            "description": "The token that can be used in a request to fetch the next page of results",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Events",
          "Batch Import"
        ],
        "x-fullstory-operation-ordering": 40
      }
    },
    "/v2beta/events/batch/{job_id}/imports": {
      "get": {
        "summary": "Get Batch Imported Events",
        "description": "Get the event details for successful events imported from a batch events import job.",
        "operationId": "GetBatchEventsImports2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/fullstory.v2.events.GetBatchEventsImportsResponse"
            }
          },
          "202": {
            "description": "Returned when this API is called while the job is still processing.",
            "schema": { }
          },
          "400": {
            "description": "Returned when invalid input has been provided. Fix the issue and retry.",
            "schema": {
              "$ref": "#/definitions/fullstory.v2.apierror.ErrorResponse",
              "example": {
                "message": "uid is required",
                "code": "required_field"
              }
            }
          },
          "401": {
            "description": "Returned when access to the resource is unauthorized.",
            "schema": {
              "$ref": "#/definitions/fullstory.v2.apierror.ErrorResponse",
              "example": {
                "message": "access is unauthorized",
                "code": "unauthorized"
              }
            }
          },
          "403": {
            "description": "Returned when access is not allowed due to insufficient permissions.",
            "schema": {
              "$ref": "#/definitions/fullstory.v2.apierror.ErrorResponse",
              "example": {
                "message": "insufficient permissions",
                "code": "forbidden"
              }
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "$ref": "#/definitions/fullstory.v2.apierror.ErrorResponse",
              "example": {
                "message": "Requested resource does not exist",
                "code": "resource_not_found"
              }
            }
          },
          "429": {
            "description": "Returned when the client has exceeded the rate limit for this endpoint. A `Retry-After` header will be included with the response. This header will contain the number of seconds that you should wait before attempting to send another request.",
            "schema": {
              "$ref": "#/definitions/fullstory.v2.apierror.ErrorResponse",
              "example": {
                "message": "Too many requests. Client has exceeded the rate limit for this endpoint.",
                "code": "too_many_requests"
              }
            }
          },
          "500": {
            "description": "Returned when a server error is encountered.",
            "schema": {
              "$ref": "#/definitions/fullstory.v2.apierror.ErrorResponse",
              "example": {
                "message": "Server error was encountered",
                "code": "server_error"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "job_id",
            "description": "ID that can be used to check the status and retrieve results for the batch import",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "page_token",
            "description": "The token that can be used in a request to fetch the next page of results",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "include_schema",
            "description": "Whether to include the schema in the response.",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "Events",
          "Batch Import"
        ],
        "x-fullstory-operation-ordering": 30
      }
    }
  },
  "definitions": {
    "fullstory.v2.apierror.ErrorResponse": {
      "type": "object",
      "example": {
        "message": "User with that ID does not exist",
        "code": "user_not_found"
      },
      "properties": {
        "message": {
          "type": "string",
          "description": "Long form description of what went wrong"
        },
        "code": {
          "type": "string",
          "description": "A short snake-cased value that is safe to handle programmatically"
        }
      },
      "description": "A structured error response from the server",
      "required": [
        "message",
        "code"
      ]
    },
    "fullstory.v2.events.BatchCreateEventsResponse": {
      "type": "object",
      "example": {
        "user": {
          "uid": "xyz123",
          "id": "123456789"
        },
        "session": {
          "id": "123456"
        },
        "context": {
          "browser": {
            "url": "https://store.mondaymorning.com",
            "user_agent": "square/pos",
            "initial_referrer": ""
          }
        },
        "name": "Support Ticket",
        "timestamp": "2022-03-15T14:23:23Z",
        "properties": {
          "id": 424242,
          "priority": "Normal",
          "source": "Email",
          "title": "Account locked out"
        }
      },
      "properties": {
        "user": {
          "$ref": "#/definitions/fullstory.v2.events.UserIdResponse"
        },
        "session": {
          "$ref": "#/definitions/fullstory.v2.events.SessionIdResponse"
        },
        "context": {
          "$ref": "#/definitions/fullstory.v2.events.Context"
        },
        "name": {
          "type": "string",
          "description": "The event's name."
        },
        "timestamp": {
          "type": "string",
          "format": "date-time",
          "description": "Optional. The event's timestamp, defaults to current time."
        },
        "properties": {
          "type": "object",
          "description": "Optional. The custom event's payload."
        },
        "schema": {
          "$ref": "#/definitions/fullstory.v2.varsapi.Schema",
          "description": "Optional. Schema declaration, to define the structure of the data, the schema will override FullStory's default type inference."
        }
      },
      "description": "Server response for created events",
      "required": [
        "name"
      ]
    },
    "fullstory.v2.events.BrowserContext": {
      "type": "object",
      "example": {
        "url": "https://app.example.com",
        "initial_referrer": "https://referrer.example.com",
        "user_agent": "Example Browser User Agent"
      },
      "properties": {
        "url": {
          "type": "string"
        },
        "user_agent": {
          "type": "string"
        },
        "initial_referrer": {
          "type": "string"
        }
      },
      "description": "The browser context in which the events are attached to."
    },
    "fullstory.v2.events.Context": {
      "type": "object",
      "example": {
        "browser": {
          "url": "https://example.com"
        },
        "location": {
          "ip_address": "127.0.0.1"
        }
      },
      "properties": {
        "browser": {
          "$ref": "#/definitions/fullstory.v2.events.BrowserContext"
        },
        "mobile": {
          "$ref": "#/definitions/fullstory.v2.events.MobileContext"
        },
        "device": {
          "$ref": "#/definitions/fullstory.v2.events.DeviceContext"
        },
        "location": {
          "$ref": "#/definitions/fullstory.v2.events.LocationContext"
        }
      },
      "description": "The context in which the events are attached to."
    },
    "fullstory.v2.events.CreateBatchEventsImportJobRequest": {
      "type": "object",
      "example": {
        "requests": [
          {
            "session": {
              "id": "123:456"
            },
            "context": {
              "browser": {
                "url": "https://store.mondaymorning.com",
                "user_agent": "square/pos",
                "initial_referrer": ""
              }
            },
            "name": "Support Ticket",
            "timestamp": "2022-03-15T14:23:23Z",
            "properties": {
              "id": 424242,
              "priority": "Normal",
              "source": "Email",
              "title": "Account locked out"
            }
          },
          {
            "user": {
              "uid": "xyz1234"
            },
            "session": {
              "use_most_recent": true
            },
            "context": {
              "browser": {
                "url": "https://store.mondaymorning.com",
                "user_agent": "square/pos",
                "initial_referrer": ""
              }
            },
            "name": "Support Ticket",
            "timestamp": "2022-03-15T14:24:23Z",
            "properties": {
              "id": 424243,
              "priority": "Normal",
              "source": "Email",
              "title": "Account locked out"
            }
          }
        ]
      },
      "properties": {
        "requests": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/fullstory.v2.events.CreateEventsRequest"
          },
          "description": "The list of event requests that should be imported"
        },
        "shared": {
          "$ref": "#/definitions/fullstory.v2.events.SharedData"
        }
      },
      "description": "The request payloads contains the list of events to be imported",
      "required": [
        "requests"
      ]
    },
    "fullstory.v2.events.CreateBatchEventsImportJobResponse": {
      "type": "object",
      "example": {
        "job": {
          "id": "abc123=",
          "status": "PROCESSING",
          "created": "2019-04-18T14:36:11.123Z",
          "finished": null
        }
      },
      "properties": {
        "job": {
          "$ref": "#/definitions/fullstory.v2.job.JobMetadata",
          "description": "Information about the job that was initiated to import the list of events submitted."
        }
      },
      "required": [
        "job"
      ]
    },
    "fullstory.v2.events.CreateEventsRequest": {
      "type": "object",
      "example": {
        "session": {
          "id": "123:456"
        },
        "context": {
          "browser": {
            "url": "https://store.mondaymorning.com",
            "user_agent": "square/pos",
            "initial_referrer": ""
          }
        },
        "name": "Support Ticket",
        "timestamp": "2022-03-15T14:23:23Z",
        "properties": {
          "id": 424242,
          "priority": "Normal",
          "source": "Email",
          "title": "Account locked out"
        }
      },
      "properties": {
        "user": {
          "$ref": "#/definitions/fullstory.v2.events.UserIdRequest"
        },
        "session": {
          "$ref": "#/definitions/fullstory.v2.events.SessionIdRequest"
        },
        "context": {
          "$ref": "#/definitions/fullstory.v2.events.Context"
        },
        "name": {
          "type": "string",
          "description": "The event's name."
        },
        "timestamp": {
          "type": "string",
          "format": "date-time",
          "description": "Optional. The event's timestamp, if not provided, defaults to current time. It is recommended to always set the timestamp."
        },
        "properties": {
          "type": "object",
          "description": "Optional. The custom event's payload."
        },
        "schema": {
          "$ref": "#/definitions/fullstory.v2.varsapi.Schema",
          "description": "Optional. Schema declaration, to define the structure of the data, the schema will override FullStory's default type inference."
        }
      },
      "required": [
        "name"
      ]
    },
    "fullstory.v2.events.CreateEventsResponse": {
      "type": "object"
    },
    "fullstory.v2.events.DeviceContext": {
      "type": "object",
      "example": {
        "manufacturer": "Device Manufacturer"
      },
      "properties": {
        "manufacturer": {
          "type": "string"
        },
        "model": {
          "type": "string"
        },
        "screen_width": {
          "type": "integer",
          "format": "int32"
        },
        "screen_height": {
          "type": "integer",
          "format": "int32"
        },
        "viewport_width": {
          "type": "integer",
          "format": "int32"
        },
        "viewport_height": {
          "type": "integer",
          "format": "int32"
        }
      },
      "description": "The device context in which the events are attached to."
    },
    "fullstory.v2.events.GetBatchEventsImportErrorsResponse": {
      "type": "object",
      "example": {
        "results": [
          {
            "message": "time stamp out of range",
            "code": "event_validation_failed",
            "event": {
              "user": {
                "uid": "xyz123",
                "id": "123456789"
              },
              "session": {
                "use_most_recent": true
              },
              "context": {
                "browser": {
                  "url": "https://store.mondaymorning.com",
                  "user_agent": "square/pos",
                  "initial_referrer": ""
                }
              },
              "name": "Support Ticket",
              "timestamp": "2012-03-15T14:23:23Z",
              "properties": {
                "id": 424242,
                "priority": "Normal",
                "source": "Email",
                "title": "Account locked out"
              }
            }
          }
        ],
        "total_records": "98",
        "next_page_token": "asd543"
      },
      "properties": {
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/fullstory.v2.events.GetBatchEventsImportErrorsResponse.FailedEventsImport"
          },
          "description": "Page of events import failures for the batch import"
        },
        "total_records": {
          "type": "string",
          "description": "The total number of failures for the specified events import"
        },
        "next_page_token": {
          "type": "string",
          "description": "The token that can be used in a subsequent request to fetch the next page of import failures"
        }
      },
      "description": "Server response for retrieving batch events import errors"
    },
    "fullstory.v2.events.GetBatchEventsImportErrorsResponse.FailedEventsImport": {
      "type": "object",
      "example": {
        "message": "time stamp out of range",
        "code": "event_validation_failed",
        "event": {
          "user": {
            "uid": "xyz123",
            "id": "123456789"
          },
          "session": {
            "use_most_recent": true
          },
          "context": {
            "browser": {
              "url": "https://store.mondaymorning.com",
              "user_agent": "square/pos",
              "initial_referrer": ""
            }
          },
          "name": "Support Ticket",
          "timestamp": "2012-03-15T14:23:23Z",
          "properties": {
            "id": 424242,
            "priority": "Normal",
            "source": "Email",
            "title": "Account locked out"
          }
        }
      },
      "properties": {
        "message": {
          "type": "string",
          "description": "A description of the failure encountered while importing the events."
        },
        "code": {
          "type": "string",
          "description": "The error code."
        },
        "event": {
          "$ref": "#/definitions/fullstory.v2.events.CreateEventsRequest",
          "description": "The corresponding events import request that resulted in the failure."
        },
        "shared": {
          "$ref": "#/definitions/fullstory.v2.events.SharedData",
          "description": "If there is any `shared` data from the original import request that may have caused conflict with data from within this event."
        }
      },
      "description": "Server response for failed batch events"
    },
    "fullstory.v2.events.GetBatchEventsImportsResponse": {
      "type": "object",
      "example": {
        "results": [
          {
            "user": {
              "uid": "xyz123",
              "id": "123456789"
            },
            "session": {
              "id": "123456"
            },
            "context": {
              "browser": {
                "url": "https://store.mondaymorning.com",
                "user_agent": "square/pos",
                "initial_referrer": ""
              }
            },
            "name": "Support Ticket",
            "timestamp": "2022-03-15T14:23:23Z",
            "properties": {
              "id": 424242,
              "priority": "Normal",
              "source": "Email",
              "title": "Account locked out"
            }
          }
        ],
        "total_records": "98",
        "next_page_token": "asd543"
      },
      "properties": {
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/fullstory.v2.events.BatchCreateEventsResponse"
          },
          "description": "Page of events import responses for the batch import"
        },
        "total_records": {
          "type": "string",
          "description": "Total number of records in this batch import"
        },
        "next_page_token": {
          "type": "string",
          "description": "The token that can be used in a subsequent request to fetch the next page of import results"
        }
      },
      "description": "Server response for retrieving batch events imported"
    },
    "fullstory.v2.events.LocationContext": {
      "type": "object",
      "example": {
        "country": "US",
        "region": "US",
        "city": "Atlanta",
        "ip_address": "127.0.0.1"
      },
      "properties": {
        "country": {
          "type": "string",
          "description": "ISO 3166-1 alpha-2 standard country code."
        },
        "region": {
          "type": "string",
          "description": "ISO-3166-2 standard region code."
        },
        "city": {
          "type": "string",
          "description": "Name of the city."
        },
        "latitude": {
          "type": "number",
          "format": "double"
        },
        "longitude": {
          "type": "number",
          "format": "double"
        },
        "ip_address": {
          "type": "string"
        }
      },
      "description": "The location context in which the events are attached to."
    },
    "fullstory.v2.events.MobileContext": {
      "type": "object",
      "example": {
        "app_id": "com.company.example",
        "app_name": "example app",
        "app_version": "1.0.0"
      },
      "properties": {
        "app_id": {
          "type": "string"
        },
        "app_version": {
          "type": "string"
        },
        "app_name": {
          "type": "string"
        },
        "build_variant": {
          "type": "string"
        }
      },
      "description": "The mobile context in which the events are attached to."
    },
    "fullstory.v2.events.SessionIdRequest": {
      "type": "object",
      "example": {
        "id": "123:456"
      },
      "properties": {
        "id": {
          "type": "string",
          "description": "The FullStory generated identifier for the session to associate the event with."
        },
        "use_most_recent": {
          "type": "boolean",
          "description": "Associate events with the most recent session captured from the user.\n\nIf set to `true`, a `user` is required. The user must have a session within the past 30 minutes, otherwise the events will be created for the user without a session.\n\nIt is recommended to use `session.id` instead, when creating events for a specific session."
        }
      },
      "description": "The session identifier."
    },
    "fullstory.v2.events.SessionIdResponse": {
      "type": "object",
      "example": {
        "id": "123456"
      },
      "properties": {
        "id": {
          "type": "string",
          "description": "The FullStory generated identifier for the session to associate the event with."
        }
      },
      "description": "The session identifier. If the event is attached to a session."
    },
    "fullstory.v2.events.SharedData": {
      "type": "object",
      "example": {
        "context": {
          "browser": {
            "url": "https://store.mondaymorning.com",
            "user_agent": "square/pos",
            "initial_referrer": ""
          }
        }
      },
      "properties": {
        "context": {
          "$ref": "#/definitions/fullstory.v2.events.Context"
        }
      },
      "description": "Optional. Any shared context among all requests in the create batch events import job. If any of the events in the `requests` field also contain a context, the event will fail to be imported."
    },
    "fullstory.v2.events.UserIdRequest": {
      "type": "object",
      "example": {
        "id": "123456789"
      },
      "properties": {
        "uid": {
          "type": "string",
          "description": "The application-specific ID you've given to the user.",
          "maxLength": 256
        },
        "id": {
          "type": "string",
          "description": "The FullStory assigned user ID."
        }
      },
      "description": "The user identifier.\n\nIf `session.id` is provided, the `session.id` is enough to identify a session for which to create the event, and `user` will not be accepted.\n\nIf `session.use_most_recent` is set to `true`, one and only one`user` field is required."
    },
    "fullstory.v2.events.UserIdResponse": {
      "type": "object",
      "example": {
        "uid": "xyz123",
        "id": "123456789"
      },
      "properties": {
        "id": {
          "type": "string"
        },
        "uid": {
          "type": "string"
        }
      },
      "description": "The user identifier"
    },
    "fullstory.v2.job.JobMetadata": {
      "type": "object",
      "example": {
        "id": "abc123",
        "status": "PROCESSING",
        "created": "2017-01-15T01:30:15.01Z",
        "finished": "2017-01-15T02:30:15.01Z"
      },
      "properties": {
        "id": {
          "type": "string",
          "description": "ID of the job."
        },
        "status": {
          "$ref": "#/definitions/fullstory.v2.job.JobStatus",
          "description": "Status of the job."
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "description": "Time the job was accepted."
        },
        "finished": {
          "type": "string",
          "format": "date-time",
          "description": "Time the job was finished, either successfully or unsuccessfully."
        }
      },
      "description": "JobMetadata contains metadata about asynchronous jobs.",
      "title": "JobMetadata",
      "required": [
        "id",
        "status",
        "created"
      ]
    },
    "fullstory.v2.job.JobStatus": {
      "type": "string",
      "enum": [
        "PROCESSING",
        "COMPLETED",
        "FAILED"
      ],
      "default": "UNKNOWN",
      "description": " - PROCESSING: Indicates that the job has been accepted by FullStory and is being processed.\n - COMPLETED: Indicates that the job has been completed successfully without any errors.\n - FAILED: Indicates that the job has failures, including partial failures."
    },
    "fullstory.v2.job.JobStatusResponse": {
      "type": "object",
      "example": {
        "imports": 42,
        "errors": 2,
        "job": {
          "id": "abd123=",
          "status": "FAILED",
          "created": "2019-04-18T14:36:11.123Z",
          "finished": "2019-04-18T15:36:11.123Z"
        }
      },
      "properties": {
        "imports": {
          "type": "integer",
          "format": "int32",
          "description": "The stats on the number of items imported successfully"
        },
        "errors": {
          "type": "integer",
          "format": "int32",
          "description": "Only included for failed imports. The stats on the number of items that failed to be imported"
        },
        "job": {
          "$ref": "#/definitions/fullstory.v2.job.JobMetadata",
          "description": "Information about the current state of the job"
        }
      },
      "description": "Server response for the job status",
      "required": [
        "imports",
        "errors",
        "job"
      ]
    },
    "fullstory.v2.varsapi.Schema": {
      "type": "object",
      "properties": {
        "properties": {
          "type": "object",
          "description": "A mapping of field names to their corresponding types."
        }
      }
    },
    "google.protobuf.NullValue": {
      "type": "string",
      "enum": [
        "NULL_VALUE"
      ],
      "default": "NULL_VALUE",
      "description": "`NullValue` is a singleton enumeration to represent the null value for the\n`Value` type union.\n\n The JSON representation for `NullValue` is JSON `null`.\n\n - NULL_VALUE: Null value."
    }
  },
  "securityDefinitions": {
    "ApiKeyAuth": {
      "type": "apiKey",
      "description": "The HTTP API requires an API key that you can generate from the FullStory app. The API key must have Admin or Architect level permissions for requests which retrieve data. The header value takes the form \"Basic {YOUR_API_KEY}\".",
      "name": "Authorization",
      "in": "header"
    }
  },
  "security": [
    {
      "ApiKeyAuth": [ ]
    }
  ]
}
