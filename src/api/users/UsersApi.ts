/* eslint-disable simple-import-sort/exports */
/* eslint-disable simple-import-sort/imports */

/**
 * This file is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Generated from operation: UsersApi
 * Do not edit manually.
 */

import { GetUserResponse } from '@model/users/GetUserResponse';
import { ListUsersResponse } from '@model/users/ListUsersResponse';
import { CreateUserResponse } from '@model/users/CreateUserResponse';
import { UpdateUserResponse } from '@model/users/UpdateUserResponse';
import { CreateUserRequest } from '@model/users/CreateUserRequest';
import { UpdateUserRequest } from '@model/users/UpdateUserRequest';
import { ErrorResponse } from '@model/apierror/ErrorResponse';
import { RequestOptions } from '../../options';


export interface UsersApi {
    /**
     * Creates a user with the specified details
     * @summary Create User
     * @param body
     */
    createUser: (body: CreateUserRequest, options?: RequestOptions) => Promise<CreateUserResponse>;
    /**
     * Delete a single user
     * @summary Delete User
     * @param id The FullStory assigned user ID
     */
    deleteUser: (id: string, options?: RequestOptions) => Promise<void>;
    /**
     * Retrieve details for a single user
     * @summary Get User
     * @param id The FullStory assigned user ID
     */
    getUser: (id: string, options?: RequestOptions) => Promise<GetUserResponse>;
    /**
     * Retrieve a list of users matching the supplied filter criteria
     * @summary Get Users
     * @param uid The application-specific ID you\&#39;ve given to a user
     * @param email The email address associated with a user
     * @param displayName The nice-looking name for a user
     * @param isIdentified Whether or not a user is anonymous or identified
     * @param pageToken The token indicating the page of users to fetch. The same filter criteria should be supplied. This value should not be specified when requesting the first page of users.
     */
    listUsers: (uid?: string, email?: string, displayName?: string, isIdentified?: boolean, pageToken?: string, options?: RequestOptions) => Promise<ListUsersResponse>;
    /**
     * Updates a user with the specified details
     * @summary Update User
     * @param id The FullStory assigned user ID
     * @param body
     */
    updateUser: (id: string, body: UpdateUserRequest, options?: RequestOptions) => Promise<UpdateUserResponse>;
}

////////////////////////////////////////////////
// TODO(sabrina): add implementations
////////////////////////////////////////////////

class UsersApiImpl implements UsersApi { }
